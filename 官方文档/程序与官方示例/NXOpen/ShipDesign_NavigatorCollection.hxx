#ifndef NXOpen_SHIPDESIGN_NAVIGATORCOLLECTION_HXX_INCLUDED
#define NXOpen_SHIPDESIGN_NAVIGATORCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ShipDesign_NavigatorCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_shipdesign_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ShipDesign
    {
        class NavigatorCollection;
    }
    namespace ShipDesign
    {
        class ShipSession;
    }
    class Part;
    namespace ShipDesign
    {
        class Navigator;
    }
    class TaggedObject;
    namespace ShipDesign
    {
        class NavigatorCollectionImpl;
        /** Represents the interface for navigator action classes <br> To obtain an instance of this class, refer to @link NXOpen::ShipDesign::ShipSession  NXOpen::ShipDesign::ShipSession @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_SHIPDESIGNEXPORT  NavigatorCollection
        {
            private: NavigatorCollectionImpl * m_navigatorcollection_impl;
            private: NXOpen::ShipDesign::ShipSession* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit NavigatorCollection(NXOpen::ShipDesign::ShipSession *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~NavigatorCollection();
            /** Shows the navigator.  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::Navigator * ShowNavigator
            (
                int index /** index */ ,
                const NXString & bitmap /** bitmap */ ,
                const NXString & tooltip /** tooltip */ ,
                const NXString & name /** name */ 
            );
            /** Shows the navigator.  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            NXOpen::ShipDesign::Navigator * ShowNavigator
            (
                int index /** index */ ,
                const char * bitmap /** bitmap */ ,
                const char * tooltip /** tooltip */ ,
                const char * name /** name */ 
            );
            /** Gets navigator count.  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: int GetNavigatorCount
            (
            );
            /** Unloads part and its children. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void UnloadPartAndItsChildren
            (
                NXOpen::Part * partTag /** parttag */ 
            );
            /** Saves the configure file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SaveConfigureFile
            (
                const NXString & navClassName /** navclassname */ 
            );
            /** Saves the configure file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void SaveConfigureFile
            (
                const char * navClassName /** navclassname */ 
            );
            /** Loads navigator models. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void RefreshNavigator
            (
                const NXString & navClassName /** navclassname */ 
            );
            /** Loads navigator models. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void RefreshNavigator
            (
                const char * navClassName /** navclassname */ 
            );
            /** Reparent navigator node. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void ReparentNode
            (
                const NXString & navClassName /** navclassname */ ,
                NXOpen::TaggedObject * tgTargetNode /** tgtargetnode */ ,
                NXOpen::TaggedObject * tgSourceNode /** tgsourcenode */ 
            );
            /** Reparent navigator node. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void ReparentNode
            (
                const char * navClassName /** navclassname */ ,
                NXOpen::TaggedObject * tgTargetNode /** tgtargetnode */ ,
                NXOpen::TaggedObject * tgSourceNode /** tgsourcenode */ 
            );
            /** Send node to sub view. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SendToSubView
            (
                const NXString & navClassName /** navclassname */ ,
                NXOpen::TaggedObject * tgTargetNode /** tgtargetnode */ 
            );
            /** Send node to sub view. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void SendToSubView
            (
                const char * navClassName /** navclassname */ ,
                NXOpen::TaggedObject * tgTargetNode /** tgtargetnode */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
