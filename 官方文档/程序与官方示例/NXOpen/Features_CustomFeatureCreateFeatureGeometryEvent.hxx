#ifndef NXOpen_FEATURES_CUSTOMFEATURECREATEFEATUREGEOMETRYEVENT_HXX_INCLUDED
#define NXOpen_FEATURES_CUSTOMFEATURECREATEFEATUREGEOMETRYEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CustomFeatureCreateFeatureGeometryEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_CustomFeatureEvent.hxx>
#include <NXOpen/Features_TrackingData.hxx>
#include <NXOpen/Features_CustomFeatureEvent.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CustomFeatureCreateFeatureGeometryEvent;
    }
    class Body;
    class Edge;
    class Face;
    namespace Features
    {
        class CustomFeatureEvent;
    }
    namespace Features
    {
        class TrackingData;
    }
    class TaggedObject;
    namespace Features
    {
        class _CustomFeatureCreateFeatureGeometryEventBuilder;
        class CustomFeatureCreateFeatureGeometryEventImpl;
        /** JA interface for the CustomFeatureCreateFeatureGeometryEvent object  <br> This calls cannot be created  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CustomFeatureCreateFeatureGeometryEvent : public NXOpen::Features::CustomFeatureEvent
        {
            private: CustomFeatureCreateFeatureGeometryEventImpl * m_customfeaturecreatefeaturegeometryevent_impl;
            private: friend class  _CustomFeatureCreateFeatureGeometryEventBuilder;
            protected: CustomFeatureCreateFeatureGeometryEvent();
            public: ~CustomFeatureCreateFeatureGeometryEvent();
            /**A method to get parasolid bodies of custom feature  @return  The Array of output Bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> GetBodies
            (
            );
            /** A method to set parasolid bodies of custom feature 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBodies
            (
                const std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> & bodies /** The Array of input Bodies */
            );
            /** Create the tracking data of the given parasolid Face or Edge id @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::TrackingData * CreateTrackingDataForParasolidEntity
            (
                NXOpen::Features::CustomFeatureEvent::ParasolidId parasolidId /** The parasolid id for which create traking data */
            );
            /** Create the tracking data of the given NX object @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::TrackingData * CreateTrackingDataForNXObject
            (
                NXOpen::TaggedObject * nxObject /** The NX object for which create traking data */
            );
            /** Add the tracking data for feature
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void AppendOutputTrackingData
            (
                const std::vector<NXOpen::Features::TrackingData *> & trackingData /** trackingdata */ 
            );
            /** A method to create parasoild copy of given NXBody
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void CopyNXBody
            (
                NXOpen::Body * solidTag /** solidtag */ ,
                NXOpen::Features::CustomFeatureEvent::ParasolidId* parasolidBodyId /** The parasolid id of copied body */,
                std::vector<NXOpen::Face *> & sourceFaces /** The array of source faces*/,
                std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> & parasolidFaceIds /** The array of corresponding copied parasolid faces*/,
                std::vector<NXOpen::Edge *> & sourceEdges /** The array of source edges*/,
                std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> & parasolidEdgeId /** The array of corresponding copied parasolid edges*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
